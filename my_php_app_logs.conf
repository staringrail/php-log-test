# /etc/logrotate.d/my_php_app_logs.conf
/var/log/php_logs/my_php_app_errors.log
/var/log/php_logs/my_php_app_general.log
{
    # Rotate logs daily
    daily
    # Keep 7 rotated log files (1 week's worth)
    rotate 7
    # Compress old log files
    compress
    # Delay compression until the next rotation cycle (useful for services that might still write to the just-rotated file)
    delaycompress
    # Don't error if the log file is missing
    missingok
    # Don't rotate if the log file is empty
    notifempty
    # Create new log files with specified permissions (mode 0664, owner syslog, group adm)
    create 0664 syslog adm
    postrotate
        # This script runs after the log files have been rotated.
        # It sends a SIGHUP signal to the rsyslogd process, which tells rsyslog
        # to close and re-open its log files. This is essential so rsyslog
        # starts writing to the newly created, empty log files instead of
        # the old, renamed ones.
        # 'pkill -HUP rsyslogd || true' is robust, especially in container environments,
        # as it doesn't rely on a PID file and the '|| true' ensures the logrotate
        # process doesn't fail if rsyslogd isn't found (e.g., if it crashes).
        pkill -HUP rsyslogd || true
    endscript
}